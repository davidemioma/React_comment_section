{"version":3,"sources":["components/comments/comments.module.css","components/comment/comment.module.css","store/comment-slice.js","store/index-redux.js","components/form/Form.js","components/comment/comment.js","components/comments/comments.js","App.js","index.js","components/form/Form.module.css"],"names":["module","exports","CommentSlice","createSlice","name","initialState","currentUser","comments","activeComment","reducers","setCommentToActive","state","action","payload","addComment","newComment","find","comment","id","unshift","deleteComment","filter","editComment","updatedComment","existingComment","findIndex","store","configureStore","reducer","commentActions","actions","Form","props","useSelector","useState","default","text","setText","onSubmit","e","preventDefault","handleSubmit","className","classes","form","top","value","rows","placeholder","onChange","target","btm","src","image","png","alt","disabled","length","task","Comment","isReplying","type","isEditing","timePassed","Date","createdAt","toLocaleDateString","dispatch","useDispatch","onDeleteHandler","onReplyHandler","onEditHandler","body","content","profile","username","you","desktop","onClick","reply","delete","edit","replyingTo","scores","score","mobile","Math","random","toString","substr","toISOString","floor","parentId","user","webp","update","replies","replyList","map","Comments","console","log","filteredComments","commentId","sort","a","b","getTime","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7e31f2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"comments_comments__V_uPf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"comment_comment__3DHk7\",\"body\":\"comment_body__XlyKC\",\"content\":\"comment_content__eZSKg\",\"profile\":\"comment_profile__1wkJy\",\"you\":\"comment_you__fihSQ\",\"scores\":\"comment_scores__3oTpl\",\"mobile\":\"comment_mobile__3iO70\",\"desktop\":\"comment_desktop__ofiiH\",\"reply\":\"comment_reply__CxT50\",\"edit\":\"comment_edit__xMKBQ\",\"delete\":\"comment_delete__2XZBH\",\"btm\":\"comment_btm__1YftK\",\"replies\":\"comment_replies__2AblJ\",\"replyList\":\"comment_replyList__1jW1u\"};","import { createSlice } from \"@reduxjs/toolkit\";\nimport { comments } from \"../data.json\";\nimport { currentUser } from \"../data.json\";\n\nconst CommentSlice = createSlice({\n  name: \"comments\",\n  initialState: {\n    currentUser: currentUser,\n    comments: comments,\n    activeComment: null,\n  },\n  reducers: {\n    setCommentToActive(state, action) {\n      state.activeComment = action.payload;\n    },\n\n    addComment(state, action) {\n      const newComment = action.payload;\n\n      const existingComment = state.comments.find(\n        (comment) => comment.id === newComment.id\n      );\n\n      if (!existingComment) {\n        state.comments.unshift(newComment);\n      }\n    },\n\n    deleteComment(state, action) {\n      const id = action.payload;\n\n      const existingComment = state.comments.find(\n        (comment) => comment.id === id\n      );\n\n      if (existingComment) {\n        state.comments = state.comments.filter((comment) => comment.id !== id);\n      }\n    },\n\n    editComment(state, action) {\n      const updatedComment = action.payload;\n\n      const existingComment = state.comments.findIndex(\n        (comment) => comment.id === updatedComment.id\n      );\n\n      if (state.comments[existingComment]) {\n        state.comments[existingComment] = updatedComment;\n      }\n    },\n  },\n});\n\nexport default CommentSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport CommentSlice from \"./comment-slice\";\n\nconst store = configureStore({\n  reducer: { comments: CommentSlice.reducer },\n});\n\nexport const commentActions = CommentSlice.actions;\n\nexport default store;\n","import classes from \"./Form.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n\nfunction Form(props) {\n  const currentUser = useSelector((state) => state.comments.currentUser);\n\n  const [text, setText] = useState(props.default);\n\n  const onChangeHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (text === \"\") return;\n\n    props.handleSubmit(text);\n\n    setText(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler} className={classes.form}>\n      <div className={classes.top}>\n        <textarea\n          value={text}\n          rows=\"5\"\n          placeholder={\"Add a comment...\"}\n          onChange={onChangeHandler}\n        ></textarea>\n      </div>\n\n      <div className={classes.btm}>\n        <img src={currentUser.image.png} alt=\"\" />\n        <button disabled={text.length === 0}>{props.task}</button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import classes from \"./comment.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { commentActions } from \"../../store/index-redux\";\nimport { useDispatch } from \"react-redux\";\nimport Form from \"../form/Form\";\n\nfunction Comment(props) {\n  const currentUser = useSelector((state) => state.comments.currentUser);\n\n  const activeComment = useSelector((state) => state.comments.activeComment);\n\n  const isReplying =\n    activeComment &&\n    activeComment.id === props.id &&\n    activeComment.type === \"replying\";\n\n  const isEditing =\n    activeComment &&\n    activeComment.id === props.id &&\n    activeComment.type === \"editing\";\n\n  const timePassed = new Date() - new Date(props.createdAt) > 300000;\n\n  const createdAt = new Date(props.createdAt).toLocaleDateString();\n\n  const dispatch = useDispatch();\n\n  const onDeleteHandler = () => {\n    dispatch(commentActions.deleteComment(props.id));\n\n    dispatch(commentActions.setCommentToActive(null));\n  };\n\n  const onReplyHandler = () => {\n    dispatch(\n      commentActions.setCommentToActive({ id: props.id, type: \"replying\" })\n    );\n  };\n\n  const onEditHandler = () => {\n    dispatch(\n      commentActions.setCommentToActive({ id: props.id, type: \"editing\" })\n    );\n  };\n\n  const onHandleReply = (text) => {\n    const reply = {\n      id: Math.random().toString(36).substr(9),\n      content: text,\n      createdAt: new Date().toISOString(),\n      score: Math.floor(Math.random() * 101).toString(),\n      parentId: props.parentId ? props.parentId : props.id,\n      replyingTo: props.username,\n      user: {\n        image: {\n          png: currentUser.image.png,\n          webp: currentUser.image.webp,\n        },\n        username: currentUser.username,\n      },\n    };\n\n    dispatch(commentActions.addComment(reply));\n\n    dispatch(commentActions.setCommentToActive(null));\n  };\n\n  const onHandleEdit = (text) => {\n    const update = {\n      id: props.id,\n      content: text,\n      createdAt: props.createdAt,\n      score: props.score,\n      parentId: props.parentId ? props.parentId : props.id,\n      replyingTo: props.username,\n      user: {\n        image: {\n          png: currentUser.image.png,\n          webp: currentUser.image.webp,\n        },\n        username: currentUser.username,\n      },\n    };\n\n    dispatch(commentActions.editComment(update));\n\n    dispatch(commentActions.setCommentToActive(null));\n  };\n\n  return (\n    <li>\n      <div className={classes.comment}>\n        <div className={classes.body}>\n          <div className={classes.content}>\n            <div className={classes.profile}>\n              <img src={props.image} alt=\"\" />\n              <span>{props.username}</span>\n              {currentUser.username === props.username ? (\n                <span className={classes.you}>You</span>\n              ) : (\n                \"\"\n              )}\n              <p>{createdAt}</p>\n            </div>\n\n            <div className={classes.desktop}>\n              <button onClick={onReplyHandler} className={classes.reply}>\n                <img src=\"/static/assets/icon-reply.svg\" alt=\"\" /> Reply\n              </button>\n\n              {currentUser.username === props.username && !timePassed && (\n                <button onClick={onDeleteHandler} className={classes.delete}>\n                  <img src=\"/static/assets/icon-delete.svg\" alt=\"\" />\n                  Delete\n                </button>\n              )}\n\n              {currentUser.username === props.username && !timePassed && (\n                <button onClick={onEditHandler} className={classes.edit}>\n                  <img src=\"/static/assets/icon-edit.svg\" alt=\"\" />\n                  Edit\n                </button>\n              )}\n            </div>\n          </div>\n          <p>\n            {props.replyingTo && <span>@{props.replyingTo}</span>}\n            {props.content}\n          </p>\n        </div>\n\n        <div className={classes.btm}>\n          <div className={classes.scores}>\n            <button>+</button>\n            <p>{props.score}</p>\n            <button>-</button>\n          </div>\n\n          <div className={classes.mobile}>\n            <button onClick={onReplyHandler} className={classes.reply}>\n              <img src=\"/static/assets/icon-reply.svg\" alt=\"\" /> Reply\n            </button>\n\n            {currentUser.username === props.username && !timePassed && (\n              <button onClick={onDeleteHandler} className={classes.delete}>\n                <img src=\"/static/assets/icon-delete.svg\" alt=\"\" />\n                Delete\n              </button>\n            )}\n\n            {currentUser.username === props.username && !timePassed && (\n              <button onClick={onEditHandler} className={classes.edit}>\n                <img src=\"/static/assets/icon-edit.svg\" alt=\"\" />\n                Edit\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {isReplying && (\n        <Form task={\"reply\"} handleSubmit={onHandleReply} default=\"\" />\n      )}\n\n      {isEditing && (\n        <Form\n          task={\"update\"}\n          handleSubmit={onHandleEdit}\n          default={props.content}\n        />\n      )}\n\n      {props.replies.length > 0 && (\n        <div className={classes.replies}>\n          <ul className={classes.replyList}>\n            {props.replies.map((reply) => (\n              <Comment\n                key={reply.id}\n                id={reply.id}\n                image={reply.user.image.png}\n                username={reply.user.username}\n                createdAt={reply.createdAt}\n                replyingTo={reply.replyingTo || \"\"}\n                content={reply.content}\n                score={reply.score}\n                parentId={reply.parentId}\n                replies={[]}\n              />\n            ))}\n          </ul>\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default Comment;\n","import classes from \"./comments.module.css\";\nimport Comment from \"../comment/comment\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { commentActions } from \"../../store/index-redux\";\nimport Form from \"../form/Form\";\n\nfunction Comments() {\n  const comments = useSelector((state) => state.comments.comments);\n\n  console.log(comments);\n\n  const currentUser = useSelector((state) => state.comments.currentUser);\n\n  const dispatch = useDispatch();\n\n  const filteredComments = comments.filter(\n    (comment) => comment.parentId === null\n  );\n\n  const getReplies = (commentId) => {\n    return comments\n      .filter((reply) => reply.parentId === commentId)\n      .sort(\n        (a, b) =>\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n      );\n  };\n\n  const handleSubmitHandler = (text) => {\n    const comment = {\n      id: Math.random().toString(36).substr(9),\n      content: text,\n      createdAt: new Date().toISOString(),\n      score: Math.floor(Math.random() * 101).toString(),\n      parentId: null,\n      user: {\n        image: {\n          png: currentUser.image.png,\n          webp: currentUser.image.webp,\n        },\n        username: currentUser.username,\n      },\n    };\n\n    dispatch(commentActions.addComment(comment));\n\n    dispatch(commentActions.setCommentToActive(null));\n  };\n\n  return (\n    <div className=\"container\">\n      <ul className={classes.comments}>\n        {filteredComments.map((comment) => (\n          <Comment\n            key={comment.id}\n            id={comment.id}\n            image={comment.user.image.png}\n            username={comment.user.username}\n            createdAt={comment.createdAt}\n            replyingTo={comment.replyingTo || \"\"}\n            content={comment.content}\n            score={comment.score}\n            parentId={comment.parentId}\n            replies={getReplies(comment.id)}\n          />\n        ))}\n      </ul>\n\n      <Form task=\"send\" handleSubmit={handleSubmitHandler} default=\"\" />\n    </div>\n  );\n}\n\nexport default Comments;\n","import { Fragment } from \"react\";\nimport Comments from \"./components/comments/comments\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Comments />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__cvyS-\",\"top\":\"Form_top__DxY-f\",\"btnTop\":\"Form_btnTop__2k4ce\",\"btm\":\"Form_btm__129eJ\"};"],"sourceRoot":""}